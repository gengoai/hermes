<!--
     ~ (c) 2005 David B. Bracewell
     ~
     ~ Licensed to the Apache Software Foundation (ASF) under one
     ~ or more contributor license agreements.  See the NOTICE file
     ~ distributed with this work for additional information
     ~ regarding copyright ownership.  The ASF licenses this file
     ~ to you under the Apache License, Version 2.0 (the
     ~ "License"); you may not use this file except in compliance
     ~ with the License.  You may obtain a copy of the License at
     ~
     ~   http://www.apache.org/licenses/LICENSE-2.0
     ~
     ~ Unless required by applicable law or agreed to in writing,
     ~ software distributed under the License is distributed on an
     ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
     ~ KIND, either express or implied.  See the License for the
     ~ specific language governing permissions and limitations
     ~ under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.gengoai</groupId>
        <artifactId>hermes-pom</artifactId>
        <version>1.1-SNAPSHOT</version>
    </parent>
    <artifactId>hermes</artifactId>
    <packaging>jar</packaging>
    <name>${project.groupId}:${project.artifactId}</name>
    <dependencies>
        <dependency>
            <groupId>com.gengoai</groupId>
            <artifactId>mango</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ibm.icu</groupId>
            <artifactId>icu4j</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.kohsuke.metainf-services</groupId>
            <artifactId>metainf-services</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gengoai</groupId>
            <artifactId>apollo</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gengoai</groupId>
            <artifactId>mango-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.12</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_2.12</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_2.12</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-analyzers-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.maltparser</groupId>
            <artifactId>maltparser</artifactId>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>docs</id>
            <build>
                <plugins>
                    <plugin>
                        <!-- added the resources plugin to copy images before adoc transform starts. -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.7</version>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/docs/images</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/docs/images</directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctor-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <configuration>
                            <doctype>article</doctype>
                            <sourceDirectory>src/main/docs/</sourceDirectory>
                            <outputDirectory>../docs/</outputDirectory>
                            <gemPath>${project.build.directory}/gems-provided</gemPath>
                            <requires>
                                <require>asciidoctor-diagram</require>
                            </requires>
                        </configuration>
                        <executions>
                            <execution>
                                <id>output-html</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>process-asciidoc</goal>
                                </goals>
                                <configuration>
                                    <backend>html5</backend>
                                    <sourceHighlighter>coderay</sourceHighlighter>
                                    <outputFile>index.htm</outputFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>output-pdf</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>process-asciidoc</goal>
                                </goals>
                                <configuration>
                                    <imagesDir>${project.build.directory}/docs/images</imagesDir>
                                    <backend>pdf</backend>
                                    <sourceHighlighter>coderay</sourceHighlighter>
                                    <attributes>
                                        <pdf-stylesdir>../docs/styles/</pdf-stylesdir>
                                        <pdf-style>custom</pdf-style>
                                    </attributes>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.asciidoctor</groupId>
                                <artifactId>asciidoctorj-pdf</artifactId>
                                <version>1.5.2</version>
                            </dependency>
                            <dependency>
                                <groupId>org.asciidoctor</groupId>
                                <artifactId>asciidoctorj-diagram</artifactId>
                                <version>2.0.1</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <build>
        <plugins>
            <plugin>
                <groupId>de.jflex</groupId>
                <artifactId>jflex-maven-plugin</artifactId>
                <version>1.5.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>src/main/java</outputDirectory>
                            <lexDefinitions>
                                <lexDefinition>src/main/jflex</lexDefinition>
                            </lexDefinitions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
